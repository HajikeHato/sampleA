キーコンテナ名を指定するには、`CryptAcquireContext` 関数の `pszContainer` パラメータを使用します。以下は、キーコンテナ名を指定してECDSA秘密鍵をインポートするC++コードの例です：

```cpp
#include <iostream>
#include <windows.h>
#include <wincrypt.h>

int main() {
    // パスワードで保護されたPEMファイルのパス
    LPCWSTR pemFilePath = L"your_key.pem";
    // パスワード
    LPCWSTR password = L"your_password";

    // ECDSAプロバイダー名
    LPCWSTR providerName = MS_KEY_STORAGE_PROVIDER;

    // キーコンテナ名
    LPCWSTR containerName = L"MyECDSAKeyContainer"; // ここでキーコンテナ名を指定

    // 鍵ストアを開く
    HCRYPTPROV hProvider = NULL;
    if (!CryptAcquireContext(&hProvider, containerName, providerName, PROV_EC_ECDSA_FULL, CRYPT_VERIFYCONTEXT)) {
        std::cerr << "Failed to acquire CNG context." << std::endl;
        return 1;
    }

    // PEMファイルからECDSA秘密鍵を読み込む
    HCRYPTKEY hKey = NULL;
    if (!CryptImportPKCS8(hProvider, pemFilePath, password, NULL, &hKey)) {
        std::cerr << "Failed to import ECDSA private key from PEM file." << std::endl;
        CryptReleaseContext(hProvider, 0);
        return 1;
    }

    // ECDSA秘密鍵を使って何かを行うことができます

    // 秘密鍵を解放する
    CryptDestroyKey(hKey);

    // コンテキストを解放する
    CryptReleaseContext(hProvider, 0);

    std::cout << "ECDSA秘密鍵を正常にインポートし、キーコンテナに保存しました。" << std::endl;

    return 0;
}
```

このコードでは、`containerName` 変数にキーコンテナ名を指定し、それを `CryptAcquireContext` 関数に渡してキーコンテナを指定しています。キーコンテナ名は必要に応じて変更してください。
