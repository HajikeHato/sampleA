理解しました。OpenSSLのPEM形式の秘密鍵ファイルをCNGにインポートするサンプルコードは以下のようになります。このコードはPEM形式の秘密鍵ファイルから秘密鍵を読み取り、CNGキーコンテナに格納します。

```cpp
#include <windows.h>
#include <bcrypt.h>
#include <stdio.h>

#pragma comment(lib, "bcrypt.lib")

// OpenSSL PEM形式の秘密鍵ファイルから秘密鍵を読み込む関数
bool LoadPrivateKeyFromPEMFile(const char* pemFileName, UCHAR** keyData, DWORD* keyDataLength) {
    FILE* pemFile = fopen(pemFileName, "rb");
    if (!pemFile) {
        return false;
    }

    // ファイルからデータを読み込む（適切なエラーチェックは省略）
    fseek(pemFile, 0, SEEK_END);
    long fileSize = ftell(pemFile);
    fseek(pemFile, 0, SEEK_SET);

    *keyData = (UCHAR*)malloc(fileSize);
    fread(*keyData, 1, fileSize, pemFile);
    *keyDataLength = (DWORD)fileSize;

    fclose(pemFile);
    return true;
}

int main() {
    // CNG関連の変数とハンドルを宣言します。
    BCRYPT_ALG_HANDLE hAlg = NULL;
    BCRYPT_KEY_HANDLE hKey = NULL;
    NTSTATUS status;

    // CNGアルゴリズムを開きます。ここではECDSA_P256を使用します。
    status = BCryptOpenAlgorithmProvider(&hAlg, BCRYPT_ECDSA_P256_ALGORITHM, NULL, 0);
    if (status != STATUS_SUCCESS) {
        // エラーハンドリング
        return 1;
    }

    UCHAR* keyData;
    DWORD keyDataLength;

    // PEM形式の秘密鍵ファイルから秘密鍵を読み込みます。
    if (!LoadPrivateKeyFromPEMFile("your_key_file.pem", &keyData, &keyDataLength)) {
        // ファイル読み込みエラー
        BCryptCloseAlgorithmProvider(hAlg, 0);
        return 1;
    }

    // 秘密鍵をキーコンテナに格納します。
    status = BCryptImportKeyPair(hAlg, NULL, BCRYPT_PRIVATE_KEY_BLOB, &hKey, keyData, keyDataLength, 0);
    if (status != STATUS_SUCCESS) {
        // エラーハンドリング
        free(keyData);
        BCryptCloseAlgorithmProvider(hAlg, 0);
        return 1;
    }

    // クリーンアップ
    free(keyData);
    BCryptDestroyKey(hKey);
    BCryptCloseAlgorithmProvider(hAlg, 0);

    return 0;
}
```

このコードは、OpenSSL PEM形式の秘密鍵ファイルから秘密鍵データを読み取り、CNGキーコンテナにインポートする方法を示しています。必要に応じてエラーハンドリングやファイルの存在確認を強化することができます。
