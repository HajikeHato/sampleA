申し訳ありません、前回の回答に誤りがありました。ECDSA秘密鍵をインポートする場合、`PROV_RSA_AES` プロバイダータイプを使用するのは正しくありません。ECDSA秘密鍵をインポートするには、`PROV_EC_ECDSA_FULL` プロバイダータイプを使用する必要があります。

以下は、正しい方法でECDSA秘密鍵をインポートするC++コードです：

```cpp
#include <iostream>
#include <windows.h>
#include <wincrypt.h>

int main() {
    // パスワードで保護されたPEMファイルのパス
    LPCWSTR pemFilePath = L"your_key.pem";
    // パスワード
    LPCWSTR password = L"your_password";

    // ECDSAプロバイダー名
    LPCWSTR providerName = MS_KEY_STORAGE_PROVIDER;

    // 鍵ストアを開く
    HCRYPTPROV hProvider = NULL;
    if (!CryptAcquireContext(&hProvider, NULL, providerName, PROV_EC_ECDSA_FULL, CRYPT_VERIFYCONTEXT)) {
        std::cerr << "Failed to acquire CNG context." << std::endl;
        return 1;
    }

    // PEMファイルからECDSA秘密鍵を読み込む
    HCRYPTKEY hKey = NULL;
    if (!CryptImportPKCS8(hProvider, pemFilePath, password, NULL, &hKey)) {
        std::cerr << "Failed to import ECDSA private key from PEM file." << std::endl;
        CryptReleaseContext(hProvider, 0);
        return 1;
    }

    // ECDSA秘密鍵を使って何かを行うことができます

    // 秘密鍵を解放する
    CryptDestroyKey(hKey);

    // コンテキストを解放する
    CryptReleaseContext(hProvider, 0);

    std::cout << "ECDSA秘密鍵を正常にインポートしました。" << std::endl;

    return 0;
}
```

この修正されたコードでは、`PROV_EC_ECDSA_FULL` プロバイダータイプを使用してECDSA秘密鍵をインポートする正しい方法を示しています。お詫び申し上げます。
