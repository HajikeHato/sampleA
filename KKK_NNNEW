以下は、C++でOpenSSLのPFXファイルをBIOで読み取り、pkcs12_parseに使用するための簡単なサンプルコードです。このコードはOpenSSL 1.1.1のバージョンで動作することを想定しています。必要なOpenSSLのヘッダーファイルとライブラリが適切にインストールされていることを確認してください。

```cpp
#include <openssl/pem.h>
#include <openssl/pkcs12.h>
#include <openssl/err.h>

int main() {
    // OpenSSLの初期化
    OpenSSL_add_all_algorithms();
    ERR_load_crypto_strings();

    // PFXファイルのパス
    const char* pfx_file_path = "your_pfx_file.pfx";

    // PFXファイルを読み込む
    BIO* pfx_bio = BIO_new_file(pfx_file_path, "rb");
    if (!pfx_bio) {
        fprintf(stderr, "PFXファイルを開けませんでした。\n");
        ERR_print_errors_fp(stderr);
        return 1;
    }

    // PKCS#12構造体を初期化
    PKCS12* p12 = d2i_PKCS12_bio(pfx_bio, nullptr);
    if (!p12) {
        fprintf(stderr, "PKCS#12構造体を読み込めませんでした。\n");
        ERR_print_errors_fp(stderr);
        BIO_free(pfx_bio);
        return 1;
    }

    // パスワード（PFXファイルのパスワード）を指定
    const char* password = "your_password_here";

    // PKCS#12構造体からキーと証明書を取得
    EVP_PKEY* key;
    X509* cert;
    if (!PKCS12_parse(p12, password, &key, &cert, nullptr)) {
        fprintf(stderr, "PKCS#12構造体からキーと証明書を取得できませんでした。\n");
        ERR_print_errors_fp(stderr);
        PKCS12_free(p12);
        BIO_free(pfx_bio);
        return 1;
    }

    // キーと証明書を使って必要な処理を行うことができます

    // メモリの解放
    EVP_PKEY_free(key);
    X509_free(cert);
    PKCS12_free(p12);
    BIO_free(pfx_bio);

    // OpenSSLの終了処理
    ERR_free_strings();
    EVP_cleanup();

    return 0;
}
```

このサンプルコードでは、指定したPFXファイルをBIOで読み取り、パスワードを使用してPKCS#12構造体から秘密キーと証明書を取得します。取得したキーと証明書を必要に応じて使用できます。また、エラーハンドリングも実装されています。

注意: 実際のアプリケーションで使用する際には、エラーハンドリングやセキュリティに関する考慮事項に注意してください。
