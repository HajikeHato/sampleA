#include <iostream>
#include "json_wrapper.h"

int main() {
    // JSONファイルを読み込む
    JsonWrapper jsonWrapper;
    if (!jsonWrapper.loadFromFile("example.json")) {
        std::cerr << "Failed to load JSON file." << std::endl;
        return 1;
    }

    // 値の追加
    jsonWrapper.addValue("name", "John Doe");
    jsonWrapper.addValue("age", 30);
    jsonWrapper.addValue("is_student", false);

    // 配列の追加
    std::vector<int> numbers = {1, 2, 3, 4, 5};
    jsonWrapper.addArray("numbers", numbers);

    // オブジェクトの配列の追加
    std::vector<std::unordered_map<std::string, std::string>> persons = {
        {{"name", "Alice"}, {"age", "25"}},
        {{"name", "Bob"}, {"age", "28"}}
    };
    jsonWrapper.addObjectArray("persons", persons);

    // 値の取得
    std::string name = jsonWrapper.getValue<std::string>("name");
    int age = jsonWrapper.getValue<int>("age");
    bool isStudent = jsonWrapper.getValue<bool>("is_student");
    std::vector<int> retrievedNumbers = jsonWrapper.getArray<int>("numbers");
    std::vector<std::unordered_map<std::string, std::string>> retrievedPersons = jsonWrapper.getObjectArray("persons");

    // 取得した値を表示
    std::cout << "Name: " << name << std::endl;
    std::cout << "Age: " << age << std::endl;
    std::cout << "Is Student: " << std::boolalpha << isStudent << std::endl;

    std::cout << "Numbers: ";
    for (int num : retrievedNumbers) {
        std::cout << num << " ";
    }
    std::cout << std::endl;

    std::cout << "Persons:" << std::endl;
    for (const auto& person : retrievedPersons) {
        std::cout << "  Name: " << person.at("name") << ", Age: " << person.at("age") << std::endl;
    }

    // JSONファイルに保存
    if (!jsonWrapper.saveToFile("example_updated.json")) {
        std::cerr << "Failed to save JSON file." << std::endl;
        return 1;
    }

    return 0;
}
